# Configuration for Nginx as a reverse proxy

worker_processes 1;

events {
    worker_connections 1024;
}

http {
    sendfile on;
    large_client_header_buffers 4 32k;

    # Define an upstream block for the Node.js application
    upstream web-api {
        server nodejs-shop:3000; 
    }

    # Define an upstream block for MongoDB Express
    upstream mongo-express {
        server mongo-express:8081;
    }

    # HTTP server block for HTTP to HTTPS redirection
    server {
        listen 80;
        server_name localhost;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server block for proxying requests to the Node.js application
    server {
        listen 443 ssl;
        server_name localhost;
        
        ssl_certificate /etc/ssl/certs/localhost.crt;
        ssl_certificate_key /etc/ssl/private/localhost.key;

        location / {
            # Proxy requests to the Node.js application
            proxy_pass http://web-api;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection keep-alive;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }
    }

    # HTTPS server block for proxying requests to MongoDB Express
    server {
        listen 443 ssl;
        server_name mongo-express.localhost;

        ssl_certificate /etc/ssl/certs/localhost.crt;
        ssl_certificate_key /etc/ssl/private/localhost.key;

        location / {
            # Proxy requests to MongoDB Express
            proxy_pass http://mongo-express;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection keep-alive;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }
    }
}

